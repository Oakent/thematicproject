<form method="POST" action="/recipes">
  <label for="name">Recipe Name:</label>
  <input type="text" id="name" name="name" required />
  <br />

  <label for="cuisine">Cuisine:</label>
  <select id="cuisine" name="cuisine" required>
    <% cuisines.forEach(cuisine => { %>
    <option value="<%= cuisine %>"><%= cuisine %></option>
    <% }); %>
  </select>
  <br />

  <label for="servings">Servings:</label>
  <input type="number" id="servings" name="servings" required />
  <br />

  <label for="type">Type of Dish:</label>
  <select id="type" name="type" required>
    <% dishTypes.forEach(type => { %>
    <option value="<%= type %>"><%= type %></option>
    <% }); %>
  </select>
  <br />

  <label for="time">Preparation Time (minutes):</label>
  <input type="number" id="time" name="time" required />
  <br />
  <label for="ingredients">Ingredients:</label>
  <div id="ingredient-container">
    <div class="ingredient-field">
      <select name="ingredient[]" required>
        <option value="">Select Ingredient</option>
      </select>
      <input type="number" name="quantity[]" min="1" required />
      <button type="button" class="remove-ingredient">Remove</button>
    </div>
  </div>
  <button type="button" id="add-ingredient-btn">Add Ingredient</button>

  <script>
    // Function to create a new ingredient field element
    function createIngredientField() {
      const ingredientField = document.createElement("div");
      ingredientField.classList.add("ingredient-field");

      const ingredientSelect = document.createElement("select");
      ingredientSelect.name = "ingredient[]";
      ingredientSelect.required = true;

      const optionDefault = document.createElement("option");
      optionDefault.value = "";
      optionDefault.innerText = "Select Ingredient";
      ingredientSelect.appendChild(optionDefault);

      const quantityInput = document.createElement("input");
      quantityInput.type = "number";
      quantityInput.name = "quantity[]";
      quantityInput.min = 1;
      quantityInput.required = true;

      const removeButton = document.createElement("button");
      removeButton.classList.add("remove-ingredient");
      removeButton.innerText = "Remove";

      ingredientField.appendChild(ingredientSelect);
      ingredientField.appendChild(quantityInput);
      ingredientField.appendChild(removeButton);

      return ingredientField;
    }

    // Function to populate ingredient options (assuming you have ingredient data available in JavaScript)
    function populateIngredientOptions(selectElement, ingredients) {
      ingredients.forEach((ingredient) => {
        const optionIngredient = document.createElement("option");
        optionIngredient.value = ingredient.id; // Replace with appropriate identifier property
        optionIngredient.innerText = `${ingredient.name} - ${ingredient.unit}`;
        selectElement.appendChild(optionIngredient);
      });
    }

    // Add event listener to the "Add Ingredient" button
    document
      .getElementById("add-ingredient-btn")
      .addEventListener("click", function () {
        const ingredientContainer = document.getElementById(
          "ingredient-container"
        );
        const newIngredientField = createIngredientField();
        populateIngredientOptions(
          newIngredientField.querySelector("select"),
          ingredients
        ); // Assuming "ingredients" is available in JavaScript
        ingredientContainer.appendChild(newIngredientField);
      });

    // Event delegation for removing ingredient fields
    document
      .getElementById("ingredient-container")
      .addEventListener("click", function (event) {
        if (event.target.classList.contains("remove-ingredient")) {
          event.target.parentNode.remove();
        }
      });
  </script>
  <br />

  <label for="instructions">Instructions:</label>
  <textarea id="instructions" name="instructions" rows="5" required></textarea>
  <br />

  <button type="submit">Create Recipe</button>
</form>
